// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$disc-name: 'disc';
$disc-x: 0px;
$disc-y: 88px;
$disc-offset-x: 0px;
$disc-offset-y: -88px;
$disc-width: 51px;
$disc-height: 32px;
$disc-total-width: 183px;
$disc-total-height: 151px;
$disc-image: '../images/sprite.png';
$disc: (0px, 88px, 0px, -88px, 51px, 32px, 183px, 151px, '../images/sprite.png', 'disc', );
$electron-name: 'electron';
$electron-x: 51px;
$electron-y: 88px;
$electron-offset-x: -51px;
$electron-offset-y: -88px;
$electron-width: 51px;
$electron-height: 32px;
$electron-total-width: 183px;
$electron-total-height: 151px;
$electron-image: '../images/sprite.png';
$electron: (51px, 88px, -51px, -88px, 51px, 32px, 183px, 151px, '../images/sprite.png', 'electron', );
$fb-name: 'fb';
$fb-x: 44px;
$fb-y: 0px;
$fb-offset-x: -44px;
$fb-offset-y: 0px;
$fb-width: 44px;
$fb-height: 44px;
$fb-total-width: 183px;
$fb-total-height: 151px;
$fb-image: '../images/sprite.png';
$fb: (44px, 0px, -44px, 0px, 44px, 44px, 183px, 151px, '../images/sprite.png', 'fb', );
$mc-name: 'mc';
$mc-x: 132px;
$mc-y: 0px;
$mc-offset-x: -132px;
$mc-offset-y: 0px;
$mc-width: 51px;
$mc-height: 32px;
$mc-total-width: 183px;
$mc-total-height: 151px;
$mc-image: '../images/sprite.png';
$mc: (132px, 0px, -132px, 0px, 51px, 32px, 183px, 151px, '../images/sprite.png', 'mc', );
$pay-pal-name: 'pay-pal';
$pay-pal-x: 132px;
$pay-pal-y: 32px;
$pay-pal-offset-x: -132px;
$pay-pal-offset-y: -32px;
$pay-pal-width: 51px;
$pay-pal-height: 32px;
$pay-pal-total-width: 183px;
$pay-pal-total-height: 151px;
$pay-pal-image: '../images/sprite.png';
$pay-pal: (132px, 32px, -132px, -32px, 51px, 32px, 183px, 151px, '../images/sprite.png', 'pay-pal', );
$sk-name: 'sk';
$sk-x: 0px;
$sk-y: 44px;
$sk-offset-x: 0px;
$sk-offset-y: -44px;
$sk-width: 44px;
$sk-height: 44px;
$sk-total-width: 183px;
$sk-total-height: 151px;
$sk-image: '../images/sprite.png';
$sk: (0px, 44px, 0px, -44px, 44px, 44px, 183px, 151px, '../images/sprite.png', 'sk', );
$star-active-name: 'star-active';
$star-active-x: 0px;
$star-active-y: 120px;
$star-active-offset-x: 0px;
$star-active-offset-y: -120px;
$star-active-width: 32px;
$star-active-height: 31px;
$star-active-total-width: 183px;
$star-active-total-height: 151px;
$star-active-image: '../images/sprite.png';
$star-active: (0px, 120px, 0px, -120px, 32px, 31px, 183px, 151px, '../images/sprite.png', 'star-active', );
$star-gray-name: 'star-gray';
$star-gray-x: 88px;
$star-gray-y: 44px;
$star-gray-offset-x: -88px;
$star-gray-offset-y: -44px;
$star-gray-width: 32px;
$star-gray-height: 31px;
$star-gray-total-width: 183px;
$star-gray-total-height: 151px;
$star-gray-image: '../images/sprite.png';
$star-gray: (88px, 44px, -88px, -44px, 32px, 31px, 183px, 151px, '../images/sprite.png', 'star-gray', );
$tw-name: 'tw';
$tw-x: 88px;
$tw-y: 0px;
$tw-offset-x: -88px;
$tw-offset-y: 0px;
$tw-width: 44px;
$tw-height: 44px;
$tw-total-width: 183px;
$tw-total-height: 151px;
$tw-image: '../images/sprite.png';
$tw: (88px, 0px, -88px, 0px, 44px, 44px, 183px, 151px, '../images/sprite.png', 'tw', );
$visa-name: 'visa';
$visa-x: 132px;
$visa-y: 64px;
$visa-offset-x: -132px;
$visa-offset-y: -64px;
$visa-width: 51px;
$visa-height: 32px;
$visa-total-width: 183px;
$visa-total-height: 151px;
$visa-image: '../images/sprite.png';
$visa: (132px, 64px, -132px, -64px, 51px, 32px, 183px, 151px, '../images/sprite.png', 'visa', );
$vk-name: 'vk';
$vk-x: 44px;
$vk-y: 44px;
$vk-offset-x: -44px;
$vk-offset-y: -44px;
$vk-width: 44px;
$vk-height: 44px;
$vk-total-width: 183px;
$vk-total-height: 151px;
$vk-image: '../images/sprite.png';
$vk: (44px, 44px, -44px, -44px, 44px, 44px, 183px, 151px, '../images/sprite.png', 'vk', );
$yt-name: 'yt';
$yt-x: 0px;
$yt-y: 0px;
$yt-offset-x: 0px;
$yt-offset-y: 0px;
$yt-width: 44px;
$yt-height: 44px;
$yt-total-width: 183px;
$yt-total-height: 151px;
$yt-image: '../images/sprite.png';
$yt: (0px, 0px, 0px, 0px, 44px, 44px, 183px, 151px, '../images/sprite.png', 'yt', );
$spritesheet-width: 183px;
$spritesheet-height: 151px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($disc, $electron, $fb, $mc, $pay-pal, $sk, $star-active, $star-gray, $tw, $visa, $vk, $yt, );
$spritesheet: (183px, 151px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
